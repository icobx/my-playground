@use "sass:math";
@import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@300&display=swap');
@import url(https://fonts.googleapis.com/css?family=Montserrat);

// ------------- MIXINS ------------- //
@mixin transition($time, $property: all, $easing: ease-in) {
  transition: $property $time $easing;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html, body {
  overflow: hidden;
}

a {
  text-decoration: none;

  &:visited {
    color: #82aab3;
  }
}

.background {
  background-size: cover;
  background-repeat: no-repeat;
  background-position: center center;
  overflow: hidden;
  will-change: transform;
  backface-visibility: hidden;

  // border-bottom: 2px solid white;

  height: 100vh + $parallax-offset;
  position: fixed;
  width: 100%;

  color: $offwhite;

  border-bottom: 3px solid black;

  transform: translateY($parallax-offset);
  @include transition($transition-speed, all, cubic-bezier(0.22, 0.44, 0, 1));
  &:before {
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0,0,0,.3);
  }
  &:first-child {
    transform: translateY(math.div(-$parallax-offset, 2)); 
    .content-wrapper {
      transform: translateY(math.div($parallax-offset, 2));
    }
  }
}

@for $i from 1 to ($slide-number + 1) {
  .background:nth-child(#{$i}) {
      /* Set stacking context of slides */
        z-index: ($slide-number + 1) - $i; 

        @if $i % 2 == 0 {
          background: linear-gradient(to top left, $darker-dark, $lighter-dark);
        }
        @else {
          background: linear-gradient(to bottom right, $darker-dark, $lighter-dark);
        }
    }
}

.content {
  &-wrapper {
    height: 100vh;
    // width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
    flex-flow: column nowrap;
    color: #fff;
    font-family: Montserrat;
    // text-transform: uppercase;
    transform: translateY($content-offset);
    will-change: transform;
    backface-visibility: hidden;
    @include transition($transition-speed + .5, all, cubic-bezier(0.22, 0.44, 0, 1));
  }
  
  &-title {
    font-size: 12vh;
    line-height: 1;
    padding-bottom: 0.5em;
    text-transform: uppercase;
  }

  &-subtitle {
    max-width: 80ch;
    // text-align: left;
    line-height: 2em;
    // text-transform: capitalize;
  }

  width: 100%;
  max-width: 950px;
  padding: 50px 20px;
}

.geom {
  &-wrapper {
    z-index: -1;
    position: absolute;
    right: 0;
    top: 0;

    display: block;
    width: 30vw;
    height: 30vw;
    
    transform-origin: center;
  }
}
// ------------- SET TRANSFORM VALUES ------------- //

.background.up-scroll {
  transform: translate3d(0,math.div(-$parallax-offset, 2),0);
  .content-wrapper {
    transform: translateY(math.div($parallax-offset, 2));
  }
  + .background {
    transform: translate3d(0,$parallax-offset,0);
      .content-wrapper {
        transform: translateY($parallax-offset);
      }
    }
}

.background.down-scroll {
  transform: translate3d(0,-(100vh + $parallax-offset),0);
  .content-wrapper {
    transform: translateY($content-offset);
  }
  + .background:not(.down-scroll) {
    transform: translate3d(0,math.div(-$parallax-offset, 2),0);
      .content-wrapper {
        transform: translateY(math.div($parallax-offset, 2));
      }
  }
}